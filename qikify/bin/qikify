#!/usr/bin/env python

import sys, os

HELP_STR = """usage: qikify [subcommand]

Qikify: MVC for Adaptive Test

available subcommands:
  help    show this help message and exit
  atesim  run the ATE simulator
  view    run the view server
  basic   run a simple machine learning-based testing system
  tttest  run 2 tier test. ATE simulator should already be running

"""


ATE_SIM_USAGE = """usage: qikify atesim [parameters]

available parameters:
  help    show this help message and exit
  run     run the ATE simulator using data from the current directory.
"""

TWO_TIER_TEST_USAGE = """usage: qikify tttest [parameters]

available parameters:
  help    show this help message and exit
  run     run 2 tier test. ATE simulator should already be running.
"""

VIEW_USAGE = """usage: qikify view [parameters]

available parameters:
  help    show this help message and exit
  run     run the view server. Current working directory should have app.js and index.html.

"""

def atesim(argv):
    if argv is None or argv[0] == 'help':
        print ATE_SIM_USAGE
        return
    if argv[0] == 'run':
        from qikify.recipes.atesim import ATESimulator
        ATESimulator().run()

def basic(argv):
    if argv[0] == 'run':
        from qikify.recipes.basic_testing import BasicTesting
        BasicTesting().run()

def tttest(argv):
    if argv is None or argv[0] == 'help':
        print TWO_TIER_TEST_USAGE
        return
    if argv[0] == 'run':
        from qikify.recipes.two_tier_test import TwoTierTest
        TwoTierTest().run()

def views(argv):
    if argv is None or argv[0] == 'help':
        print VIEW_USAGE
        return
    if argv[0] == 'run':
        from qikify.views.viewserver import ViewServer
        ViewServer().run()


if __name__ == '__main__':
    print 'Qikify:',
    try:
        subcommand = sys.argv[1]
    except:
        subcommand = 'help'

    # pass along subcommand args
    argv = sys.argv[2:] if len(sys.argv) >= 3 else None
    
    if subcommand == 'atesim':
        atesim(argv)
    elif subcommand == 'basic':
        basic(argv)
    elif subcommand == 'tttest':
        tttest(argv)
    elif subcommand == 'view':
        views(argv)
    elif subcommand in ['help', '-h', '--help']:
        print HELP_STR
    else:
        print HELP_STR





